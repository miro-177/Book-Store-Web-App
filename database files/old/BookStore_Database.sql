-- MySQL Script generated by MySQL Workbench
-- Tue Jun 24 18:18:42 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

-- -----------------------------------------------------
-- Schema book_store
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema book_store
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `book_store` DEFAULT CHARACTER SET utf8 ;
USE `book_store` ;

-- -----------------------------------------------------
-- Table `book_store`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `book_store`.`User` (
  `account_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NOT NULL,
  `phone_number` VARCHAR(15) NULL,
  `email` VARCHAR(100) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `user_status` ENUM('Inactive', 'Active', 'Admin') NULL DEFAULT 'Inactive',
  `promos` TINYINT NULL DEFAULT 0,
  PRIMARY KEY (`account_id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `book_store`.`ShippingAddress`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `book_store`.`ShippingAddress` (
  `address_id` INT NOT NULL,
  `account_id` INT NOT NULL,
  `street` VARCHAR(255) NOT NULL,
  `city` VARCHAR(200) NOT NULL,
  `state` VARCHAR(15) NOT NULL,
  `zip` VARCHAR(9) NOT NULL,
  PRIMARY KEY (`address_id`),
  INDEX `account_id_idx` (`account_id` ASC) VISIBLE,
  CONSTRAINT `ShippingAddress_account_id`
    FOREIGN KEY (`account_id`)
    REFERENCES `book_store`.`User` (`account_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `book_store`.`PaymentInfo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `book_store`.`PaymentInfo` (
  `payment_id` INT NOT NULL auto_increment,
  `account_id` INT NOT NULL,
  `card_type` VARCHAR(20) NOT NULL,
  `card_number` VARCHAR(255) NOT NULL,
  `expiration_date` DATE NOT NULL,
  PRIMARY KEY (`payment_id`),
  INDEX `account_id_idx` (`account_id` ASC) VISIBLE,
  CONSTRAINT `PaymentInfo_account_id`
    FOREIGN KEY (`account_id`)
    REFERENCES `book_store`.`User` (`account_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `book_store`.`Book`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `book_store`.`Book` (
  `isbn` VARCHAR(17) NOT NULL,
  `category` VARCHAR(100) NULL,
  `title` VARCHAR(255) NULL,
  `author` VARCHAR(255) NULL,
  `cover_pic` VARCHAR(255) NULL,
  `edition` VARCHAR(45) NULL,
  `publisher` VARCHAR(100) NULL,
  `publication_year` INT NULL,
  `quantity` INT NULL,
  `minimum_threshold` INT NULL,
  `buying_price` DECIMAL(10,2) NULL,
  `selling_price` DECIMAL(10,2) NULL,
  PRIMARY KEY (`isbn`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `book_store`.`Rating`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `book_store`.`Rating` (
  `isbn` VARCHAR(17) NOT NULL,
  `account_id` INT NOT NULL,
  `rating` TINYINT NULL CHECK (rating BETWEEN 1 AND 5),
  PRIMARY KEY (`isbn`, `account_id`),
  INDEX `account_id_idx` (`account_id` ASC) VISIBLE,
  CONSTRAINT `isbn`
    FOREIGN KEY (`isbn`)
    REFERENCES `book_store`.`Book` (`isbn`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Rating_account_id`
    FOREIGN KEY (`account_id`)
    REFERENCES `book_store`.`User` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `book_store`.`Cart`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `book_store`.`Cart` (
  `card_item_id` VARCHAR(45) NOT NULL,
  `account_id` INT NOT NULL,
  `isbn` VARCHAR(17) NOT NULL,
  PRIMARY KEY (`card_item_id`),
  INDEX `account_id_idx` (`account_id` ASC) VISIBLE,
  INDEX `isbn_idx` (`isbn` ASC) VISIBLE,
  CONSTRAINT `account_id`
    FOREIGN KEY (`account_id`)
    REFERENCES `book_store`.`User` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Cart_isbn`
    FOREIGN KEY (`isbn`)
    REFERENCES `book_store`.`Book` (`isbn`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `book_store`.`Promotions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `book_store`.`Promotions` (
  `promo_code` VARCHAR(20) NOT NULL,
  `percent` DECIMAL(5,2) NULL,
  `start_date` DATE NULL,
  `end_date` DATE NULL,
  `emailed` TINYINT NULL DEFAULT 0,
  PRIMARY KEY (`promo_code`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `book_store`.`Orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `book_store`.`Orders` (
  `order_id` INT NOT NULL AUTO_INCREMENT,
  `account_id` INT NOT NULL,
  `time_placed` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `order_status` ENUM('Pending', 'Shipped', 'Delivered', 'Cancelled') NULL DEFAULT 'Pending',
  `address_id` INT NOT NULL,
  `payment_id` INT NULL,
  `promo_code` VARCHAR(20) NULL,
  `confirmation_num` VARCHAR(100) NULL,
  PRIMARY KEY (`order_id`),
  UNIQUE INDEX `confirmation_num_UNIQUE` (`confirmation_num` ASC) VISIBLE,
  INDEX `account_id_idx` (`account_id` ASC) VISIBLE,
  INDEX `address_id_idx` (`address_id` ASC) VISIBLE,
  INDEX `payment_id_idx` (`payment_id` ASC) VISIBLE,
  INDEX `promo_code_idx` (`promo_code` ASC) VISIBLE,
  CONSTRAINT `Orders_account_id`
    FOREIGN KEY (`account_id`)
    REFERENCES `book_store`.`User` (`account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Orders_address_id`
    FOREIGN KEY (`address_id`)
    REFERENCES `book_store`.`ShippingAddress` (`address_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Orders_payment_id`
    FOREIGN KEY (`payment_id`)
    REFERENCES `book_store`.`PaymentInfo` (`payment_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Orders_promo_code`
    FOREIGN KEY (`promo_code`)
    REFERENCES `book_store`.`Promotions` (`promo_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `book_store`.`OrderItems`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `book_store`.`OrderItems` (
  `order_id` INT NULL,
  `isbn` VARCHAR(17) NULL,
  `quantity` INT NULL,
  `user_price` DECIMAL(10,2) NULL,
  INDEX `order_id_idx` (`order_id` ASC) VISIBLE,
  INDEX `isbn_idx` (`isbn` ASC) VISIBLE,
  CONSTRAINT `OrderItems_order_id`
    FOREIGN KEY (`order_id`)
    REFERENCES `book_store`.`Orders` (`order_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Order_Items_isbn`
    FOREIGN KEY (`isbn`)
    REFERENCES `book_store`.`Book` (`isbn`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `book_store`.`Tokens`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `book_store`.`Tokens` (
  `token_id` INT NOT NULL AUTO_INCREMENT,
  `account_id` INT NOT NULL,
  `token` VARCHAR(255) NOT NULL,
  `token_type` ENUM('Email', 'Password') NULL,
  `creation_time` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `expiration_time` DATETIME NULL,
  PRIMARY KEY (`token_id`),
  INDEX `account_id_idx` (`account_id` ASC) VISIBLE,
  CONSTRAINT `Tokens_account_id`
    FOREIGN KEY (`account_id`)
    REFERENCES `book_store`.`User` (`account_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

